maila {

  #When set to true, exception stacktrace will be printed.
  debug = false

  #properties for javax.mail
  server {
    #Configs below are all converted to java properties, which is used by javax.mail.
    #So more config can be add, with sender and reader type set properly.
    #Goto java mail's API web see more property definitions.
    mail.pop3s.host = "localhost"
    mail.pop3s.port = 995
    mail.pop3s.starttls.enable = true
    mail.smtps.host = "localhost"
    mail.smtps.port = 465
    mail.smtps.auth = true

    javax.mail.debug = false
  }
  sender {
    #the type picks up server properties above.
    transport.type = "smtps"

    #Print sending info or not.
    logging = true
  }
  reader {
    #the type picks up server properties above.
    store.type = "pop3s"

    #Email folder.
    folder = "INBOX"

    #Delete emails on the server if they have been read.
    delete-after-fetch = false

    #When fetching through pop3, receivedDate may not be available, though,
    #it can be found in header, which requires String parsing.
    pop3-received-date-parse {
      #Maila uses java 8 DateTimeFormatter and RFC_1123_DATE_TIME as default.
      #Default will be tried at last after customly defined pattern below.
      #Formatters will be tried in the order according to config path alphabetically.
      #Pattern definition: https://docs.oracle.com/javase/tutorial/i18n/format/simpleDateFormat.html
      formatter {
        #you can define any name and value pair, e.g.:
        #my-pattern = "my-pattern-value"

        #green-mails = "EEE dd MMM yyyy HH:mm:ss Z"
      }

      #Formatter's locale.
      locale = java.util.Locale.ENGLISH
    }
  }

  authentication {
    #User must be specified in your config file.

    #user=

    #WARNING: putting password down is to undermine security.
    #Password stored here is encrypted with AES, you can use the bmt tool provided by this project
    #or any other AES tool to generate your encrypted password.
    #If password is not specified, you must provide a password to application instance.

    #password=

    password-encoding = "utf8"

    #If set to true, password could be tried as plain-text when key is not provided.
    allow-none-encryption-password = false
  }

  bmt {
    csv {
      #For mail contents read from csv file. When set to "default", will use default encoding of the platform.
      encoding = "utf8"

      #the csv first line(head)'s field name for mail.
      head {
        to = "to"
        subject = "subject"
        text = "text"
      }
    }
  }
}

